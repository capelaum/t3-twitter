import { SignInButton, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";

import { api, type RouterOutputs } from "~/utils/api";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image";
import { LoadingPage } from "~/components/LoadSpinner";

dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;

  return (
    <div className="flex w-full items-center gap-3">
      <Image
        src={user.profileImageUrl}
        alt="Profile Image"
        className="rounded-full"
        width={56}
        height={56}
        placeholder="blur"
        blurDataURL={user.profileImageUrl}
      />

      <input
        type="text"
        placeholder="Type some emojis!"
        className="grow rounded-sm bg-transparent px-2 py-1 outline-none"
      />
    </div>
  );
};

type PostWithAuthor = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithAuthor) => {
  const { post, author } = props;

  return (
    <div className="flex items-center gap-3 border-b border-slate-700 p-4">
      <Image
        src={author.profileImageUrl}
        alt={`@${author.username ?? "user"}'s profile picture`}
        className="h-14 w-14 rounded-full"
        width={56}
        height={56}
        placeholder="blur"
        blurDataURL={author.profileImageUrl}
      />

      <div className="flex flex-col gap-2">
        <div className="flex items-center gap-1 text-slate-300">
          <span className="text-sm font-semibold">{`@${
            author.username ?? "user"
          } Â· `}</span>
          <span className="text-sm font-thin">
            {dayjs(post.createdAt).fromNow()}
          </span>
        </div>

        <p>{post.content}</p>
      </div>
    </div>
  );
};

const Feed = () => {
  const { data, isLoading: postsIsLoading } = api.posts.getAll.useQuery();

  if (postsIsLoading) return <LoadingPage />;

  if (!data) return <div>Something went wrong...</div>;

  return (
    <div className="flex flex-col">
      <div className="flex flex-col">
        {data?.map((fullPost) => (
          <PostView key={fullPost.post.id} {...fullPost} />
        ))}
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  const { isLoaded: userLoaded, isSignedIn } = useUser();

  api.posts.getAll.useQuery();

  if (!userLoaded) return null;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full border-x border-slate-700 md:max-w-2xl">
          <div className="flex items-center gap-4 border-b border-slate-700 p-4">
            {!isSignedIn && (
              <SignInButton mode="redirect">
                <button className="flex justify-center rounded-md bg-slate-100 py-1 px-2 text-sm font-medium text-slate-900">
                  Sign in
                </button>
              </SignInButton>
            )}

            {/* {!!user.isSignedIn && (
              <SignOutButton>
                <button className="flex justify-center rounded-md bg-slate-100 py-1 px-2 text-sm font-medium text-slate-900">
                  Sign Out
                </button>
              </SignOutButton>
            )} */}

            {!!isSignedIn && <CreatePostWizard />}
          </div>

          <Feed />
        </div>
      </main>
    </>
  );
};

export default Home;
